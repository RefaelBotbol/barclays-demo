package up9_autogenerated_tests

import (
    . "authentication"
    . "up9lib"
    assert "github.com/stretchr/testify/assert"
    testing "testing"
)

func TestGetCustomers222(t *testing.T) {
    // GET http://user.sock-shop/customers (endp 222)
    userSockShop := GetHttpClient(t, "http://user.sock-shop", new(Authentication))
    req := new(HttpRequest)
    resp := userSockShop.Get(req, "/customers")
    assert.Equal(t, 200, resp.StatusCode())
    assert.NotNil(t, JsonPath(t, "$._embedded.customer[*]._links.self.href", resp.String()))
}

func TestGetCustomersCustomeridAddresses020(t *testing.T) {
    for _, tt := range LoadDataset(t, "data/20/dataset_20.json") {
        customerId := tt.(map[string]interface{})["customerId"]

        // GET http://user.sock-shop/customers/{customerId}/addresses (endp 20)
        userSockShop := GetHttpClient(t, "http://user.sock-shop", new(Authentication))
        req := new(HttpRequest)
        resp := userSockShop.Get(req, "/customers/" + customerId.(string) + "/addresses")
        assert.Equal(t, 200, resp.StatusCode())
        assert.NotNil(t, JsonPath(t, "$._embedded.address[*]._links.self.href", resp.String()))
    }
}

func TestGetCustomersCustomeridCards021(t *testing.T) {
    for _, tt := range LoadDataset(t, "data/21/dataset_21.json") {
        customerId := tt.(map[string]interface{})["customerId"]

        // GET http://user.sock-shop/customers/{customerId}/cards (endp 21)
        userSockShop := GetHttpClient(t, "http://user.sock-shop", new(Authentication))
        req := new(HttpRequest)
        resp := userSockShop.Get(req, "/customers/" + customerId.(string) + "/cards")
        assert.Equal(t, 200, resp.StatusCode())
        assert.NotNil(t, JsonPath(t, "$._embedded.card[*]._links.card.href", resp.String()))
    }
}
